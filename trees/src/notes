Tree data structure is -:
-- tree is a non- linear data structure which organizes data in a hierarchical structure ad thus is a recursive definition
OR
-- a tree is a connected graph without any circuits.
OR
-- if in a graph

Properties:
-- there is one and only one path between every pair of vertices in a tree.
-- a tree with n vertices has exactly (n-1) edges.
-- a graph is a tree if and only if it is a minimally connected.
-- any connected graph with n vertices and (n-1) edges is a tree.

terminologies:
--child
--siblings
--degree
--internal node
--leaf node
--level
--height
--depth
--subtree
--forest
--root
--edge
--parent

1) Root: the first node from where the tree orginates is called as a root node. Node A is the only root node.

2) Edge: the connected link between any two nodes is called as an edge.
In a tree with n number of nodes, there are exactly (n-1) number of edges.

3) Parent: The node which has a branch from it to any other node is called as a parent node.
The node which has one or more children is called as a parent node.
In a tree, a parent node can have any number of child nodes

4) Child: The node which is a descendant of some node is called as a child node.
All the nodes are child nodes except the root node.

5) Siblings: Nodes which belong to the same parent are called as siblings.
Nodes with the same parent are called sibling nodes.

6) Degree: degree of the node is the total number of children of that node.
Degree of the tree is the highest degree of a node among all the nodes in the tree.

7) Internal/Non-terminal Node: The node which hs at least one child is calld
internal node are called as non-
every non- leaf node is an internal node
nodes A,B,C, E and G

8) Leaf: The Node which does not have any child is called as a leaf node.
leaf nodes are also called as external nodes or terminal nodes
Nodes D, I, J, F, K and H

9) Level: In a tree, each step from top to bottom is called as level of a tree.
The level count starts with 0 by default and increments by 1 at each level or step.

10) Height: Total number of edges that lies on the longest path from any leaf node to a particular node is called as height of a tree.
Height of a tree is the height of root node.
Height of all leaf nodes = 0

11) Depth: Total number of edges from root node to a particular node is called  as depth of that node.
Depth of a tree is the total number of edges from root node to a leaf node in the longest path
Depth of a root node = 0

12) Subtree: In tree, each child from a node forms a subtree recursively.
Every child node forms a subtree on its parent node.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Binary tree:
It is a special tree data structure in which eah node can have at most 2 children
Thus in a binary tree, each node has either 0 child or 1 child or 2 children.

Unlabeled Binary tree:
a binary tree is unlabeled if its nodes are not assigned any label.

Number of different binary trees possible with 'n' unlabelled nodes =

labelled Binary tree:




types of bujnary tree:
Full/strictly
perfect
complete
skewed
rooted

1) Rooted binary tree: is a binary tree that satisfies the following 2 properties
it has a root node
each node has at most 2 children

2) Full/ strictly binary tree: A binary tree in which every node has either 0 or 2 children is called Full binary tree.
full binary tree is also called as Strictly binary tree.
First binary tree is not a full because node C has only 1 child.

3) Perfect Binary tree: is a binary tree that satisfies the following 2 properties:
Every internal node has exactly 2 children.
all the leaf nodes are at the same level.

4) Complete binary tree: is a binary tree that satisfies the following 2 properties:
all the levels are completely filled except possibly the last level
the last level must be strictly filled from left to right.

5) skewed binary tree: is a binary tree that satisfies the following 2 properties:
all the nodes except one node has one and only one child. The remaining node has no child
OR
A skewed tree is a binary tree of a nodes such that its depth is (n-1).

Binary tree traversal:
tree traversal refers to the process of visiting each node in a tree data structure exactly once.
techniques:
---depth first traversal
-- preorder traversal
--  inorder traversal
-- postorder traversal
--- breath first traversal

1) pre order
algo:
-- visit the root
-- traverse the left sub tree i.e. call preorder(left sub tree)
-- traverse the right sub tree i.e. call preorder(right sub tree)
Root->Left->Right

2) In-order
algo:
-- traverse the left sub tree i.e. call in-order(left sub tree)
-- visit the root
--traverse the right sub tree i.e. call in-order(right sub tree)
Left->Root->Right

3) postorder
algo:
-- traverse the left sub tree i.e. call postorder(left sub tree)
--traverse the right sub tree i.e. call postorder(right sub tree)
-- visit the root
Left->right->Root

Breadth first traversal:
-- Breadth first traversal of a tree prints all the nodes of a tree level by level.
-- Breadth first traversal is also called as level order traversal.

Tree:
It is a non-linear data structure used for storing the data
it is made up of nodes and edges without having cycle
Each node in a tree can point to 'N' number of nodes
It is a way of representing hierarchical structure with a parent node called a root and many levels of additional nodes.

Binary tree:
A tree is a binary tree, if each node has 0,1,or 2 child nodes.
Preorder:
Visit the root node
traverse the left subtree in pre order fashion
traverse the right subtree in pre order fashion


